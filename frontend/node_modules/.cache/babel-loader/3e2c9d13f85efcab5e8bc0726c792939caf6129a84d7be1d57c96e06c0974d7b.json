{"ast":null,"code":"var _jsxFileName = \"D:\\\\Email_sender\\\\frontend\\\\src\\\\components\\\\StatusTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StatusTable() {\n  _s();\n  const [emails, setEmails] = useState([]); // Changed variable name for clarity\n\n  useEffect(() => {\n    const fetchEmailStatus = async () => {\n      try {\n        const response = await axios.get('/api/email-status');\n        setEmails(response.data); // Corrected to response.data\n      } catch (error) {\n        console.error(\"Failed to fetch email status\", error); // Corrected error logging\n      }\n    };\n    fetchEmailStatus();\n    const interval = setInterval(fetchEmailStatus, 5000); // Poll every 5 seconds\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"status-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Email Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Company Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delivery Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Opened\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: emails.map(email =>\n        /*#__PURE__*/\n        // Corrected to emails.map\n        _jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: email.companyName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: email.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), \" // Corrected to email.email\", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: email.sendStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: email.deliveryStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: email.opened ? \"Yes\" : \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)]\n        }, email.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(StatusTable, \"Pz1emXvf1o2teMcG4tW42BuWti4=\");\n_c = StatusTable;\nexport default StatusTable;\nvar _c;\n$RefreshReg$(_c, \"StatusTable\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","StatusTable","_s","emails","setEmails","fetchEmailStatus","response","get","data","error","console","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","email","companyName","sendStatus","deliveryStatus","opened","id","_c","$RefreshReg$"],"sources":["D:/Email_sender/frontend/src/components/StatusTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction StatusTable() {\r\n    const [emails, setEmails] = useState([]); // Changed variable name for clarity\r\n\r\n    useEffect(() => {\r\n        const fetchEmailStatus = async () => {\r\n            try {\r\n                const response = await axios.get('/api/email-status');\r\n                setEmails(response.data); // Corrected to response.data\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch email status\", error); // Corrected error logging\r\n            }\r\n        };\r\n\r\n        fetchEmailStatus();\r\n        const interval = setInterval(fetchEmailStatus, 5000);  // Poll every 5 seconds\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"status-table\">\r\n            <h2>Email Status</h2>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Company Name</th>\r\n                        <th>Email</th>\r\n                        <th>Status</th>\r\n                        <th>Delivery Status</th>\r\n                        <th>Opened</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {emails.map((email) => ( // Corrected to emails.map\r\n                        <tr key={email.id}>\r\n                            <td>{email.companyName}</td>\r\n                            <td>{email.email}</td> // Corrected to email.email\r\n                            <td>{email.sendStatus}</td>\r\n                            <td>{email.deliveryStatus}</td>\r\n                            <td>{email.opened ? \"Yes\" : \"No\"}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StatusTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}